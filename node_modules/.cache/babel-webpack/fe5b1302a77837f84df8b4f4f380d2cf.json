{"ast":null,"code":"import { Tusa } from './tusa';\nimport { environment } from '../environments/environment';\nimport { Repo } from './repo';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let GitService = /*#__PURE__*/(() => {\n  class GitService {\n    constructor(http) {\n      this.http = http;\n      this.data = [];\n      this.tusadata = [];\n      this.user = new Tusa(\"\", \"\", \"\", 0, 0, 0, 0, \"\", \"\", \"\");\n      this.repository = new Repo(\"\", \"\", \"\", \"\");\n    }\n\n    Request(username) {\n      this.data.length = 0;\n      let promise = new Promise((resolve, reject) => {\n        this.http.get(environment.baseUrl + username).toPromise().then(response => {\n          this.user.profile_url = response.avatar_url;\n          this.user.login = response.login;\n          this.user.bio = response.bio;\n          this.user.public_repos = response.public_repos;\n          this.user.public_gists = response.public_gists;\n          this.user.tusafollowers = response.followers;\n          this.user.tusafollowing = response.following;\n          this.user.url = response.url;\n          this.user.location = response.location;\n          this.user.email = response.email;\n          resolve(response);\n        }, error => {\n          // this.user.login = \"An error!!\"\n          // this.user.bio = \"Bills\"\n          reject();\n        });\n        this.http.get(environment.baseUrl + username + '/repos').toPromise().then(response => {\n          for (let i = 0; i < response.length; i++) {\n            this.data = new Repo(response[i].html_url, response[i].name, response[i].description, response[i].language);\n            this.tusadata.push(this.data);\n          }\n\n          resolve(response);\n        }, error => {\n          reject(error);\n        });\n      });\n      return promise;\n    }\n\n  }\n\n  GitService.ɵfac = function GitService_Factory(t) {\n    return new (t || GitService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  GitService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: GitService,\n    factory: GitService.ɵfac,\n    providedIn: 'root'\n  });\n  return GitService;\n})();","map":null,"metadata":{},"sourceType":"module"}